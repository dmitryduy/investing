{"version":3,"sources":["components/UserNavbar/UserNavbar.styles.js","components/UserNavbar/UserNavbar.js","components/UserInfoCard/UserInfoCard.styles.js","components/LockSvg/LockSvg.js","toLocale.js","components/UserCardItem/UserCardItem.styles.js","components/UserCardItem/UserCardItem.js","round.js","components/UserInfoCard/UserInfoCard.js","components/Stocks/Stocks.styles.js","components/Stocks/StockRow/StockRow.styles.js","components/Arrow/Arrow.js","components/Stocks/StockRow/StockRow.js","constants.js","reducers/stockReducer.js","components/Stocks/Stocks.js","sockets.js","hooks/useSocket.js","pages/UserPage.js","components/StockPageMain/StockCard/StockCard.styles.js","components/StockPageMain/StockCard/StockCard.js","components/StockPageMain/StockPageMain.styles.js","components/StockPageMain/StockPageMain.js","components/BuySold/BuySold.styles.js","Styled.js","components/BuySold/BuySold.js","reducers/settingsReducer.js","pages/StockPage.js","components/OrderBook/OrderBook.styles.js","components/OrderBook/OrderBook.js","components/SoldContent/SoldContent.styles.js","hooks/useInput.js","hooks/useAnimation.js","components/SoldBuyStockInfo/SoldBuyStockInfo.styles.js","components/SoldBuyStockInfo/SoldBuyStockInfo.js","components/SoldBuyInput/SoldBuyInput.styles.js","components/SoldBuyInput/SoldBuyInput.js","components/SoldContent/SoldContent.js","reducers/userReducer.js","pages/SoldPage.js","components/BuyContent/BuyContent.js","pages/BuyPage.js","pages/Catalog.js","components/OrderRow/OrderRow.styles.js","components/OrderRow/OrderRow.js","pages/OrderPage.js","pages/LoginPage.js","App.js","reducers/rootReducer.js","store/store.js","index.js"],"names":["UserNavbarContainer","styled","div","UserNavbarTitle","h2","UserNavbarMenu","nav","UserNavbarItem","Link","Back","span","UserNavbar","active","title","navigate","useNavigate","onClick","to","className","UserInfoCardContainer","UserInfoProfit","p","LockSvg","color","fontSize","style","fill","x","y","width","height","viewBox","d","toLocale","number","percent","Math","abs","toLocaleString","currency","UserInfoCardItem","UserCardItem","children","round","floor","UserInfoCard","stockLoaded","useSelector","stock","loaded","user","stockData","useState","sign","setSign","totalStockPrice","stocks","reduce","prev","userStock","find","stockItem","id","price","amount","useEffect","startBalance","balance","name","frozenBalance","StocksContainer","StocksTitle","StockRowContainer","StockName","StockTitle","h4","StockTicker","StockImage","img","StockPrice","StockTotalPrice","StockProfit","Arrow","xmlns","StockRow","userStockData","stockUser","src","image","ticker","frozenAmount","BASE_URL","initialState","types","fetchUserStock","stockIds","dispatch","fetch","method","headers","body","JSON","stringify","then","response","json","data","type","payload","stockReducer","state","action","newStock","map","Stocks","userStocks","useDispatch","sort","a","b","margin","padding","socket","io","useSocket","msgName","on","cb","off","emit","UserPage","updateStocksSocket","changedStock","StockCardContainer","StockCardContent","StockCardName","StockCardSector","StockCardImage","StockCard","sector","AboutStock","StockCardWidget","StockCardWidgetContent","StockPageMain","flex","marginRight","about","countryInfo","countryImage","alt","counryName","countryName","stockExchangeInfo","stockExchangeImage","stockExchangeName","BuySoldContainer","BuySoldItem","BuySoldButton","Input","props","hint","Button","button","BuySold","stockInUser","settings","soldPrice","buyPrice","changeSoldPriceAC","newPrice","changeBuyPriceAC","settingsReducer","StockPage","useParams","setStock","orderBook","buy","sold","length","display","OrderBookContainer","OrderBookHeader","OrderBookItem","OrderBook","changeChoosePrice","userOrders","readyBuy","readySold","concat","forEach","userOrder","temp","item","push","order","showUserOrders","totalAmount","totalSold","totalBuy","SoldContentContainer","SoldContainer","useInput","regex","inputValue","setInputValue","changeState","event","notInput","test","target","value","useAnimation","animateTimout","animate","setAnimate","setTimeout","SoldBuyInfo","LastOrder","SoldBuyStockInfo","lastOrder","Hint","SoldBuyInput","onInput","isAnimate","inputHintText","hintText","SoldContent","minSoldPrice","setAmount","setPrice","soldSocket","chooseSoldPrice","isIncorrectPrice","setIncorrectPriceAnimation","isIncorrectAmount","setIncorrectAmountAnimation","stockAmount","userName","stockId","soldByPrice","sellerName","error","fetchUserAC","fetchUser","status","userReducer","SoldPage","userId","BuyContent","maxBuyPrice","buySocket","chooseBuyPrice","buyByPrice","buyerName","BuyPage","Header","StockItem","Catalog","setStocks","OrderTop","OrderRowContainer","LeftSide","OrderInfo","OrderTotalPrice","OrderRow","stockName","OrderPage","orderList","orderId","orderItem","textAlign","fontWeight","LoginTitle","h1","LoginSubTitle","h3","LoginContent","LoginPage","setName","isIncorrectUserName","disabled","Container","App","changeUserData","exact","path","element","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a38f833.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const UserNavbarContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding-bottom: 10px;\r\n  border-bottom: 2px solid #dddfe0;\r\n  align-items: center;\r\n  margin-bottom: 40px;\r\n  position: relative;\r\n`;\r\n\r\nexport const UserNavbarTitle = styled.h2`\r\n  font-weight: 400;\r\n  letter-spacing: 1px;\r\n  font-size: 30px;\r\n`;\r\n\r\nexport const UserNavbarMenu = styled.nav`\r\n  display: flex;\r\n`;\r\n\r\nexport const UserNavbarItem = styled(Link)`\r\n  margin-left: 20px;\r\n  color: rgba(0,0,0,.54);\r\n  font-weight: 400;\r\n  padding-bottom: 12px;\r\n  transform: translateY(12px);\r\n  border-bottom: 3px solid transparent;\r\n  cursor: pointer;\r\n  transition: color .4s;\r\n  &.active {\r\n    border-bottom: 3px solid #666;\r\n    color: rgba(0,0,0,.8);\r\n  }\r\n  &.not-active:hover {\r\n    color: rgba(0,0,0,.8);\r\n    border-bottom: 3px solid #dddfe0;\r\n  }\r\n`;\r\n\r\nexport const Back = styled.span`\r\n  position: absolute;\r\n  top: 120%;\r\n  color: rgba(0,0,0,.8);\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: #000;\r\n  }\r\n`;","import React from 'react';\r\nimport { Back, UserNavbarContainer, UserNavbarItem, UserNavbarMenu, UserNavbarTitle } from \"./UserNavbar.styles\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\n\r\nconst UserNavbar = ({active, title}) => {\r\n    const navigate = useNavigate();\r\n    const pushBack = () => navigate(-1);\r\n\r\n    return (\r\n            <UserNavbarContainer>\r\n                {active !== 'review'? <Back onClick={pushBack}>Вернуться назад</Back>: ''}\r\n            <UserNavbarTitle>{title}</UserNavbarTitle>\r\n            <UserNavbarMenu>\r\n                <UserNavbarItem to='/' className={active === 'review' ? 'active': 'not-active'}>Обзор</UserNavbarItem>\r\n                <UserNavbarItem to='/order' className={active === 'order' ? 'active': 'not-active'}>Заявки</UserNavbarItem>\r\n                <UserNavbarItem to='/catalog' className={active === 'catalog'? 'active': 'not-active'}>Каталог</UserNavbarItem>\r\n            </UserNavbarMenu>\r\n        </UserNavbarContainer>\r\n    );\r\n};\r\n\r\nexport default UserNavbar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const UserInfoCardContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-gap: 20px;\r\n  padding: 40px 30px;\r\n  border-radius: 10px;\r\n  background: linear-gradient(235deg,#404040,#000000);\r\n  margin-bottom: 40px;\r\n`;\r\n\r\n\r\nexport const UserInfoProfit = styled.p`\r\n  color: #333;\r\n  &.positive {\r\n    color: #00a127;\r\n  }\r\n\r\n  &.negative {\r\n    color: #e31c1c;\r\n  }\r\n`;","import React from 'react';\r\n\r\nconst LockSvg = ({color, fontSize}) => {\r\n    return (\r\n        <svg style={{fill: color}}\r\n             x=\"0px\" y=\"0px\" width={fontSize} height={fontSize} viewBox=\"0 0 516.375 516.375\"\r\n             >\r\n\r\n\t<g>\r\n\t\t<path\r\n            d=\"M258.188,286.875c-26.775,0-47.812,21.037-47.812,47.812c0,15.3,7.65,28.688,19.125,38.25v38.25    c0,15.3,13.388,28.688,28.688,28.688s28.688-13.388,28.688-28.688v-38.25c11.475-9.562,19.125-22.95,19.125-38.25    C306,307.912,284.963,286.875,258.188,286.875z M267.75,361.463v49.725c0,5.737-3.825,9.562-9.562,9.562s-9.562-3.825-9.562-9.562    v-49.725c-11.475-3.825-19.125-15.301-19.125-26.775c0-15.3,13.388-28.688,28.688-28.688s28.688,13.388,28.688,28.688    C286.875,348.075,279.225,357.638,267.75,361.463z\"/>\r\n        <path\r\n            d=\"M401.625,210.375v-66.938C401.625,65.025,336.6,0,258.188,0C179.775,0,114.75,65.025,114.75,143.438v66.938    c-32.513,0-57.375,24.862-57.375,57.375V459c0,32.513,24.862,57.375,57.375,57.375h286.875C434.138,516.375,459,491.513,459,459    V267.75C459,237.15,434.138,210.375,401.625,210.375z M133.875,143.438c0-68.85,55.462-124.312,124.312-124.312    c68.85,0,124.312,55.462,124.312,124.312v66.938h-19.125v-66.938c0-57.375-47.812-105.188-105.188-105.188S153,86.062,153,143.438    v66.938h-19.125V143.438z M344.25,143.438v66.938H172.125v-66.938c0-47.812,38.25-86.062,86.062-86.062    S344.25,95.625,344.25,143.438z M439.875,459c0,21.037-17.213,38.25-38.25,38.25H114.75c-21.038,0-38.25-17.213-38.25-38.25    V267.75c0-21.038,17.212-38.25,38.25-38.25h286.875c21.037,0,38.25,17.212,38.25,38.25V459z\"/>\r\n\t</g>\r\n</svg>\r\n    );\r\n};\r\n\r\nexport default LockSvg;\r\n","const toLocale = (number, percent = false) => {\r\n    return Math.abs(number).toLocaleString('RU-ru', {\r\n        style: !percent ? 'currency' : 'percent',\r\n        currency: 'USD'\r\n    });\r\n}\r\n\r\nexport default toLocale;","import styled from \"styled-components\";\r\n\r\n\r\nexport const UserInfoCardItem = styled.div`\r\n\r\n  h6 {\r\n    color: hsla(0, 0%, 100%, .72);\r\n    font-weight: 400;\r\n    font-size: 14px;\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  p {\r\n    color: #fff;\r\n    font-size: 18px;\r\n    letter-spacing: 1px;\r\n  }\r\n`;","import React from 'react';\r\nimport { UserInfoCardItem } from \"./UserCardItem.styles\";\r\n\r\nconst UserCardItem = ({title, children}) => {\r\n    return (\r\n        <UserInfoCardItem>\r\n            <h6>{title}</h6>\r\n            {children}\r\n        </UserInfoCardItem>\r\n    );\r\n};\r\n\r\nexport default UserCardItem;\r\n","const round = (number) => {\r\n    return Math.floor(number * 100) / 100;\r\n}\r\n\r\nexport default round;","import React, { useEffect, useState } from 'react';\r\nimport { UserInfoCardContainer, UserInfoProfit } from \"./UserInfoCard.styles\";\r\nimport { useSelector } from \"react-redux\";\r\nimport LockSvg from \"../LockSvg/LockSvg\";\r\nimport toLocale from \"../../toLocale\";\r\nimport UserCardItem from \"../UserCardItem/UserCardItem\";\r\nimport round from \"../../round\";\r\n\r\nconst UserInfoCard = () => {\r\n\r\n    const stockLoaded = useSelector(({stock}) => stock.loaded);\r\n    const user = useSelector(({user}) => user.user);\r\n    const stock = useSelector(({stock}) => stock.stockData);\r\n    const [sign, setSign] = useState('');\r\n\r\n    const totalStockPrice = stock && user.stocks.reduce((prev, userStock) => {\r\n        const currentPrice = stock.find(stockItem => stockItem.id === userStock.id)?.price;\r\n        return prev + (currentPrice || userStock.price) * userStock.amount;\r\n    }, 0);\r\n\r\n\r\n    useEffect(() => {\r\n        if (stockLoaded) {\r\n            if (round(user.startBalance) < round(user.balance + totalStockPrice)) {\r\n                setSign('+')\r\n            } else if (round(user.startBalance) > round(user.balance + totalStockPrice)) {\r\n                setSign('-')\r\n            } else {\r\n                setSign('');\r\n            }\r\n        }\r\n\r\n    }, [user, stock, totalStockPrice]);\r\n\r\n    return (\r\n        <UserInfoCardContainer>\r\n            <UserCardItem title='Стоимость портфеля в долларах'>\r\n                <p>{toLocale(user.balance + totalStockPrice)}</p>\r\n            </UserCardItem>\r\n            <UserCardItem title='За все время'>\r\n                <UserInfoProfit className={sign === '+' ? 'positive' : sign === '-' ? 'negative' : ''}>\r\n                    {sign}\r\n                    {toLocale(user.startBalance - user.balance - totalStockPrice)}\r\n                    ({sign}\r\n                    {toLocale((user.startBalance - user.balance - totalStockPrice) / user.startBalance, true)})\r\n                </UserInfoProfit>\r\n            </UserCardItem>\r\n            <UserCardItem title='Имя'>\r\n                <p>{user.name}</p>\r\n            </UserCardItem>\r\n            <UserCardItem title='Осталось денег'>\r\n                <p>{toLocale(user.balance)}{user.frozenBalance ?\r\n                    <span>\r\n                        (<LockSvg color='#fff' fontSize={14}/> {toLocale(user.frozenBalance)})\r\n                    </span> : ''}</p>\r\n            </UserCardItem>\r\n        </UserInfoCardContainer>\r\n    );\r\n};\r\n\r\nexport default UserInfoCard;\r\n","import styled from \"styled-components\";\r\n\r\n\r\nexport const StocksContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-radius: 10px;\r\n  border: 1px solid #dddfe0;\r\n  .header {\r\n    display: flex;\r\n    font-weight: 500;\r\n    color: rgba(0, 0, 0, .8);\r\n    padding: 20px 40px;\r\n    li:first-child {\r\n      flex: 2;\r\n    }\r\n    li:nth-child(2)  {\r\n      flex: 1;\r\n    }\r\n    li:nth-child(3) {\r\n      flex: 1;\r\n    }\r\n    li:last-child {\r\n      flex: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StocksTitle = styled.h2`\r\n  margin-bottom: 20px;\r\n  color: rgba(0, 0, 0, .8);\r\n  font-weight: 400;\r\n`;\r\n\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const StockRowContainer = styled(Link)`\r\n  display: flex;\r\n  padding: 10px 40px;\r\n  cursor: pointer;\r\n  transition: .2s;\r\n  border-top: 2px solid #dddfe0;\r\n  color: #000;\r\n  &:hover {\r\n    background-color: #f6f7f8;\r\n  }\r\n`;\r\n\r\nexport const StockName = styled.div`\r\n  flex: 2;\r\n  display: flex;\r\n`;\r\n\r\nexport const StockTitle = styled.h4`\r\ncolor: #333;\r\n  font-weight: 400;\r\n  font-size: 16px;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nexport const StockTicker = styled.p`\r\n  text-transform: uppercase;\r\n  color: rgba(0,0,0,.54);\r\n  font-size: 12px;\r\n`;\r\n\r\nexport const StockImage = styled.img`\r\n    width: 40px;\r\n  margin-right: 10px;\r\n  border-radius: 50%;\r\n`;\r\n\r\nexport const StockPrice = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  \r\n  svg {\r\n    height: 20px;\r\n    color: rgba(0,0,0,.54);\r\n  }\r\n  span.prev {\r\n    color: rgba(0,0,0,.54);;\r\n  }\r\n  span.current {\r\n    color: #000;\r\n  }\r\n`;\r\n\r\nexport const StockTotalPrice = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  span.price {\r\n    color: #000;\r\n  }\r\n  span.amount {\r\n    color: rgba(0,0,0,.54);\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nexport const StockProfit = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  \r\n  span.percent {\r\n    font-size: 12px;\r\n  }\r\n  &.positive {\r\n    color: #00a127;\r\n  }\r\n\r\n  &.negative {\r\n    color: #e31c1c;\r\n  }\r\n`;","import React from 'react';\r\n\r\nconst Arrow = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\r\n            <path\r\n                d=\"M9.589 7.001L8.297 5.706a1 1 0 111.416-1.412l2.29 2.295a2 2 0 01-.001 2.826l-2.29 2.292a1 1 0 11-1.414-1.414l1.29-1.292-5.587.004a1 1 0 01-.002-2L9.59 7z\"\r\n                fill=\"currentColor\"/>\r\n        </svg>\r\n    );\r\n};\r\n\r\nexport default Arrow;\r\n","import React from 'react';\r\nimport {\r\n    StockImage,\r\n    StockName,\r\n    StockPrice,\r\n    StockProfit, StockRowContainer,\r\n    StockTicker,\r\n    StockTitle,\r\n    StockTotalPrice\r\n} from \"./StockRow.styles\";\r\nimport { useSelector } from \"react-redux\";\r\nimport LockSvg from \"../../LockSvg/LockSvg\";\r\nimport Arrow from \"../../Arrow/Arrow\";\r\nimport toLocale from \"../../../toLocale\";\r\n\r\n\r\nconst StockRow = ({stock}) => {\r\n    const userStockData = useSelector(({user}) => user.user.stocks.find(stockUser => stockUser.id === stock.id));\r\n\r\n    if (!userStockData) {\r\n        return null;\r\n    }\r\n    const sign = stock.price > userStockData.price ? '+' : stock.price < userStockData.price ? '-' : '';\r\n\r\n    return (\r\n        <StockRowContainer to={`/stocks/${stock.id}`}>\r\n            <StockName>\r\n                <StockImage src={stock.image}/>\r\n                <div>\r\n                    <StockTitle>{stock.name}</StockTitle>\r\n                    <StockTicker>{stock.ticker}</StockTicker>\r\n                </div>\r\n            </StockName>\r\n            <StockPrice>\r\n                <span className='prev'>{toLocale(userStockData.price)}</span>\r\n                <Arrow/>\r\n                <span className='current'>{toLocale(stock.price)}</span>\r\n            </StockPrice>\r\n            <StockTotalPrice>\r\n                <span className='price'>{toLocale(userStockData.amount * stock.price)}</span>\r\n                <span className='amount'>{userStockData.amount} шт.\r\n                    {userStockData.frozenAmount ?\r\n                        <span>\r\n                            ({<LockSvg color='#000' fontSize={11}/>} {userStockData.frozenAmount} шт.)\r\n                        </span> : ''}\r\n                    </span>\r\n            </StockTotalPrice>\r\n            <StockProfit className={sign === '+' ? 'positive' : sign === '-' ? 'negative' : ''}>\r\n                <span className='dollars'>\r\n                    {sign}\r\n                    {toLocale(userStockData.amount * userStockData.price - stock.price * userStockData.amount)}</span>\r\n                <span className='percent'>\r\n                    {sign}\r\n                    {toLocale((stock.price - userStockData.price) / userStockData.price, true)}</span>\r\n            </StockProfit>\r\n        </StockRowContainer>\r\n    );\r\n};\r\n\r\nexport default StockRow;\r\n","\r\nexport const    BASE_URL = 'https://investing-backend.herokuapp.com';","import { BASE_URL } from \"../constants\";\r\n\r\nconst initialState = {\r\n    stockData: null,\r\n    loaded: false,\r\n}\r\n\r\nconst types = {\r\n    FETCH_USER_STOCKS: 'FETCH_USER_STOCKS',\r\n    UPDATE_STOCK: 'UPDATE_STOCK'\r\n}\r\n\r\nconst stockReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case types.FETCH_USER_STOCKS:\r\n            return {\r\n                ...state,\r\n                stockData: action.payload,\r\n                loaded: true\r\n            }\r\n        case types.UPDATE_STOCK:\r\n            const newStock = state.stockData.map(stock => {\r\n                if (stock.id === action.payload.id) {\r\n                    return {...stock, price: action.payload.price};\r\n                }\r\n                return {...stock};\r\n            });\r\n\r\n            return {...state, stockData: newStock};\r\n\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport const fetchUserStockAC = (stock) => ({\r\n    type: types.FETCH_USER_STOCKS,\r\n    payload: stock\r\n})\r\n\r\nexport const updateStockAC = (stock) => {\r\n    return {\r\n        type: types.UPDATE_STOCK,\r\n        payload: stock\r\n    }\r\n}\r\n\r\nexport const fetchUserStock = (stockIds) => (dispatch) => {\r\n    fetch(`${BASE_URL}/getStock`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(stockIds)\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            dispatch(fetchUserStockAC(data));\r\n        });\r\n}\r\n\r\nexport default stockReducer;","import React, { useEffect } from 'react';\r\nimport {\r\n    StocksContainer, StocksTitle,\r\n} from \"./Stocks.styles\";\r\nimport StockRow from \"./StockRow/StockRow\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchUserStock } from \"../../reducers/stockReducer\";\r\n\r\n\r\nconst Stocks = () => {\r\n\r\n    const {stockData, loaded} = useSelector(({stock}) => stock);\r\n    const userStocks = useSelector(({user}) => user.user.stocks);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchUserStock(userStocks.map(stock => stock.id)));\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <StocksTitle>Акции</StocksTitle>\r\n            <StocksContainer>\r\n                <div className='header'>\r\n                    <li>Название</li>\r\n                    <li>Цена</li>\r\n                    <li>Стоимость</li>\r\n                    <li>За сегодня</li>\r\n                </div>\r\n                {loaded ?\r\n                    stockData\r\n                        .sort((a, b) => a.name < b.name ? -1 : 0)\r\n                        .map(stock => <StockRow key={stock.id} stock={stock}/>)\r\n                    :\r\n                    <p style={{margin: '0 auto', padding: '10px'}}>Loading...</p>\r\n                }\r\n            </StocksContainer>\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default Stocks;\r\n","import io from \"socket.io-client\";\r\nimport { BASE_URL } from \"./constants\";\r\nlet socket = io(`${BASE_URL}`);\r\nexport default socket;","import socket from \"../sockets\";\r\n\r\nconst useSocket = (msgName) => {\r\n\r\n    return {\r\n        on: (cb) => {\r\n            socket.on(msgName, (data) => {\r\n                cb(data);\r\n            })\r\n        },\r\n        off: () => {\r\n            socket.off(msgName)\r\n        },\r\n        emit: (data) => {\r\n            socket.emit(msgName, data)\r\n        }\r\n    }\r\n}\r\n\r\nexport default useSocket;","import React, { useEffect } from 'react';\r\nimport UserNavbar from \"../components/UserNavbar/UserNavbar\";\r\nimport UserInfoCard from \"../components/UserInfoCard/UserInfoCard\";\r\nimport Stocks from \"../components/Stocks/Stocks\";\r\nimport useSocket from \"../hooks/useSocket\";\r\nimport { updateStockAC } from \"../reducers/stockReducer\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst UserPage = () => {\r\n    const updateStocksSocket = useSocket('update stocks');\r\n    const dispatch = useDispatch();\r\n\r\n    updateStocksSocket.on((changedStock) => {\r\n        dispatch(updateStockAC(changedStock));\r\n    })\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            updateStocksSocket.off();\r\n        };\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            <UserNavbar active='review' title='Брокерский счет'/>\r\n            <UserInfoCard/>\r\n            <Stocks/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserPage;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StockCardContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  color: #fff;\r\n  background: linear-gradient(235deg,#404040,#000000);\r\n  padding: 20px 40px 20px 20px;\r\n  min-height: 180px;\r\n  max-height: 200px;\r\n  border-radius: 10px;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nexport const StockCardContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const StockCardName = styled.div`\r\n  display: flex;\r\n  h3 {\r\n    font-weight: 700;\r\n    font-size: 20px;\r\n    margin-right: 5px;\r\n  }\r\n  span {\r\n    letter-spacing: 1px;\r\n    opacity: .54;\r\n    font-weight: 700;\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nexport const StockCardSector = styled.div`\r\n  h4 {\r\n    opacity: .54;\r\n    font-weight: 300;\r\n    font-size: 14px;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  span {\r\n    font-weight: 700;\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nexport const StockCardImage = styled.img`\r\n  height: 100px;\r\n  border-radius: 50%;\r\n  margin: auto 0;\r\n`;","import React from 'react';\r\nimport {\r\n    StockCardContainer,\r\n    StockCardContent,\r\n    StockCardImage,\r\n    StockCardName,\r\n    StockCardSector\r\n} from \"./StockCard.styles\";\r\n\r\nconst StockCard = ({ticker, name, img, sector}) => {\r\n    return (\r\n        <StockCardContainer>\r\n            <StockCardContent>\r\n                <StockCardName>\r\n                    <h3>{name}</h3>\r\n                    <span>{ticker}</span>\r\n                </StockCardName>\r\n                <StockCardSector>\r\n                    <h4>Сектор</h4>\r\n                    <span>{sector}</span>\r\n                </StockCardSector>\r\n            </StockCardContent>\r\n            <StockCardImage src={img}/>\r\n        </StockCardContainer>\r\n    );\r\n};\r\n\r\nexport default StockCard;\r\n","import styled from \"styled-components\";\r\n\r\nexport const AboutStock = styled.div`\r\n  margin-bottom: 20px;\r\n\r\n  h3 {\r\n    font-weight: 700;\r\n    font-size: 20px;\r\n    color: rgba(0, 0, 0, .8);\r\n    margin-bottom: 30px;\r\n  }\r\n\r\n  p {\r\n    font-size: 15px;\r\n    line-height: 24px;\r\n  }\r\n`;\r\n\r\nexport const StockCardWidget = styled.div`\r\n  margin-bottom: 20px;\r\n\r\n  h4 {\r\n    color: rgba(0, 0, 0, .54);\r\n    font-size: 13px;\r\n    margin-bottom: 8px;\r\n  }\r\n`;\r\n\r\nexport const StockCardWidgetContent = styled.div`\r\n  display: flex;\r\n\r\n  img {\r\n    width: 32px;\r\n    border-radius: 50%;\r\n    margin-right: 8px;\r\n  }\r\n\r\n  span {\r\n    color: rgba(0, 0, 0, .8);\r\n    align-self: center;\r\n  }\r\n`;","import React from 'react';\r\nimport StockCard from \"./StockCard/StockCard\";\r\nimport { AboutStock, StockCardWidget, StockCardWidgetContent } from \"./StockPageMain.styles\";\r\n\r\nconst StockPageMain = ({stock}) => {\r\n    return (\r\n        <div style={{flex: '3', marginRight: '20px'}}>\r\n           <StockCard img={stock.image} sector={stock.sector} name={stock.name} ticker={stock.ticker}/>\r\n            <AboutStock>\r\n                <h3>О компании</h3>\r\n                <p>{stock.about}</p>\r\n            </AboutStock>\r\n            <StockCardWidget>\r\n                <h4>Страна</h4>\r\n                <StockCardWidgetContent>\r\n                    <img src={stock.countryInfo.countryImage} alt={stock.countryInfo.counryName}/>\r\n                    <span>{stock.countryInfo.countryName}</span>\r\n                </StockCardWidgetContent>\r\n            </StockCardWidget>\r\n            <StockCardWidget>\r\n                <h4>Биржа торгов</h4>\r\n                <StockCardWidgetContent>\r\n                    <img src={stock.stockExchangeInfo.stockExchangeImage} alt={stock.stockExchangeInfo.stockExchangeName}/>\r\n                    <span>{stock.stockExchangeInfo.stockExchangeName}</span>\r\n                </StockCardWidgetContent>\r\n            </StockCardWidget>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StockPageMain;\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nexport const BuySoldContainer = styled.div`\r\n  position: sticky;\r\n  top: 50px;\r\n  display: flex;\r\n  flex: 1;\r\n  border: 1px solid #e7e8ea;\r\n  padding: 24px 20px 20px;\r\n  height: 180px;\r\n  border-radius: 10px;\r\n`;\r\n\r\nexport const BuySoldItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  flex: 1;\r\n  h5 {\r\n    font-size: 13px;\r\n    color:rgba(0,0,0,.54);\r\n    font-weight: 400;\r\n    margin-bottom: 10px;\r\n  }\r\n  span {\r\n    color: #333;\r\n    font-weight: 700;\r\n    font-size: 20px;\r\n    margin-bottom: 40px;\r\n  }\r\n`;\r\n\r\nexport const BuySoldButton = styled(Link)`\r\n  background-color: #ffdd2d;\r\n  border-radius: 5px;\r\n  border: none;\r\n  padding: 15px 23px;\r\n  text-align: center;\r\n  font-size: 15px;\r\n  margin-right: 5px;\r\n  cursor: pointer;\r\n  transition: .3s;\r\n  color: #000;\r\n  &:hover {\r\n    background-color: #fcc521;\r\n  }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const Input = styled.div`\r\n  position: relative;\r\n  &::before {\r\n    position: absolute;\r\n    content: '${props => props.hint}';\r\n    z-index: 100;\r\n    pointer-events: none;\r\n    color: rgba(0,0,0,.54);\r\n    font-size: 11px;\r\n    letter-spacing: -.2px;\r\n    top: 5px;\r\n    left: 10px;\r\n  }\r\n  input {\r\n    width: 100%;\r\n    border-radius: 5px;\r\n    color: rgba(0,0,0,.8);\r\n    padding: 20px 10px 5px;\r\n    font-size: 16px;\r\n    border: 1px solid #e7e8ea;\r\n    outline: none;\r\n    transition: .2s;\r\n    &:focus {\r\n      background-color: #e7e8ea;\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport const Button = styled.button`\r\n  background-color: #ffdd2d;\r\n  border-radius: 5px;\r\n  border: none;\r\n  width: 100%;\r\n  padding: 15px 23px;\r\n  text-align: center;\r\n  font-size: 15px;\r\n  margin-right: 5px;\r\n  cursor: pointer;\r\n  transition: .3s;\r\n  color: #3a3a3a;\r\n  &:hover {\r\n    background-color: #fcc521;\r\n  }\r\n  &:disabled {\r\n    background-color: rgba(236,241,247,.56);\r\n    cursor: default;\r\n  }\r\n`;","import React from 'react';\r\nimport { BuySoldButton, BuySoldContainer, BuySoldItem } from \"./BuySold.styles\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Button } from \"../../Styled\";\r\nimport toLocale from \"../../toLocale\";\r\n\r\nconst BuySold = ({price, id}) => {\r\n    const stockInUser = useSelector(({user}) => user.user.stocks.find(stock => stock.id === +id)) || false;\r\n    const {soldPrice, buyPrice} = useSelector(({settings}) => settings);\r\n\r\n    return (\r\n        <BuySoldContainer>\r\n            <BuySoldItem>\r\n                <h5>Покупка</h5>\r\n                <span>{toLocale(buyPrice || price)}</span>\r\n                <BuySoldButton to={`/buy/${id}`}>Купить</BuySoldButton>\r\n            </BuySoldItem>\r\n            <BuySoldItem>\r\n                <h5>Продажа</h5>\r\n                <span>{toLocale(soldPrice || price)}</span>\r\n                {stockInUser && <BuySoldButton to={`/sold/${id}`}>Продать</BuySoldButton>}\r\n            </BuySoldItem>\r\n        </BuySoldContainer>\r\n    );\r\n};\r\n\r\nexport default BuySold;\r\n","const initialState = {\r\n    soldPrice: null,\r\n    buyPrice: null,\r\n}\r\n\r\nconst types = {\r\n    CHANGE_SOLD_PRICE: 'CHANGE_SOLD_PRICE',\r\n    CHANGE_BUY_PRICE: 'CHANGE_BUY_PRICE',\r\n    SET_START: 'SET_START'\r\n}\r\n\r\nconst settingsReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case types.CHANGE_SOLD_PRICE:\r\n            return {...state, soldPrice: action.payload}\r\n        case types.CHANGE_BUY_PRICE:\r\n            return {...state, buyPrice: action.payload}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport const changeSoldPriceAC = (newPrice) => ({\r\n    type: types.CHANGE_SOLD_PRICE,\r\n    payload: newPrice\r\n})\r\n\r\nexport const changeBuyPriceAC = (newPrice) => ({\r\n    type: types.CHANGE_BUY_PRICE,\r\n    payload: newPrice\r\n})\r\n\r\n\r\nexport default settingsReducer;","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from \"react-router\";\r\nimport StockPageMain from \"../components/StockPageMain/StockPageMain\";\r\nimport BuySold from \"../components/BuySold/BuySold\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { changeBuyPriceAC, changeSoldPriceAC } from \"../reducers/settingsReducer\";\r\nimport UserNavbar from \"../components/UserNavbar/UserNavbar\";\r\nimport { BASE_URL } from \"../constants\";\r\n\r\n\r\nconst StockPage = () => {\r\n    const {id} = useParams();\r\n    const [stock, setStock] = useState(null);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        fetch(`${BASE_URL}/stock/${id}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setStock(data);\r\n                dispatch(changeBuyPriceAC(data.orderBook.buy[0]?.price));\r\n                dispatch(changeSoldPriceAC(data.orderBook.sold[data.orderBook.sold.length - 1]?.price))\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {stock &&\r\n            <>\r\n                <UserNavbar title={stock?.name}/>\r\n                <div style={{display: 'flex'}}>\r\n                    <StockPageMain stock={stock}/>\r\n                    <BuySold id={id} price={stock.price}/>\r\n                </div>\r\n            </>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default StockPage;\r\n","import styled from \"styled-components\";\r\n\r\nexport const OrderBookContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 3;\r\n  border: 1px solid #e7e8ea;\r\n  border-radius: 6px;\r\n  max-height: 300px;\r\n  cursor: pointer;\r\n  overflow: auto;\r\n  &::-webkit-scrollbar {\r\n    width: 3px;\r\n    position: absolute;\r\n  }\r\n\r\n  &::-webkit-scrollbar-track {\r\n    background-color: transparent;\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb {\r\n    background-color: rgba(0, 0, 0, .3);\r\n    border-radius: 5px;\r\n  }\r\n`;\r\n\r\nexport const OrderBookHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid #e7e8ea;\r\n  padding: 10px;\r\n  \r\n  span {\r\n    font-size: 13px;\r\n  }\r\n\r\n  .buy {\r\n    color: #178d22;\r\n  }\r\n\r\n  .sold {\r\n    color: #c40b08;\r\n  }\r\n`;\r\n\r\nexport const OrderBookItem = styled.div`\r\n  height: 34px;\r\n  min-height: 34px;\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 1px 0;\r\n  position: relative;\r\n  transition: .2s;\r\n  &:hover {\r\n    background-color: rgba(0,0,0,.04);;\r\n  }\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n  \r\n  .amount {\r\n    position: absolute;\r\n    font-size: 13px;\r\n  }\r\n  .price {\r\n    position: absolute;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    font-size: 13px;\r\n  }\r\n  .user-orders {\r\n    position: absolute;\r\n    left: 25%;\r\n    font-size: 11px;\r\n    padding: 2px; \r\n    border: 1px solid rgba(51,51,51,.48);\r\n    border-radius: 3px;\r\n  }\r\n  &.buy {\r\n    .progress {\r\n      border-radius: 0 10px 10px 0;\r\n      background-color: rgba(57,181,74,.08);\r\n      height: 100%;\r\n      transition: 1s;\r\n    }\r\n    .amount {\r\n      left: 6px;\r\n      color: #178d22;\r\n    }\r\n  }\r\n  &.sold {\r\n    transform: rotateZ(180deg);\r\n    .progress {\r\n      border-radius:  0 10px 10px 0;\r\n      background-color: rgba(224,31,25,.08);;\r\n      height: 100%;\r\n    }\r\n    .amount {\r\n      left: 6px;\r\n      color: #c40b08;\r\n      transform: rotateZ(180deg);\r\n    }\r\n    .price {\r\n      transform: rotateZ(180deg) translateX(50%);\r\n    }\r\n    .user-orders {\r\n      transform: rotateZ(180deg);\r\n    }\r\n  }\r\n`;","import React from 'react';\r\nimport { OrderBookContainer, OrderBookHeader, OrderBookItem } from \"./OrderBook.styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeBuyPriceAC, changeSoldPriceAC } from \"../../reducers/settingsReducer\";\r\n\r\nconst OrderBook = ({orderBook}) => {\r\n    const dispatch = useDispatch();\r\n    const changeChoosePrice = (newPrice) => {\r\n        dispatch(changeSoldPriceAC(newPrice));\r\n        dispatch(changeBuyPriceAC(newPrice))\r\n    }\r\n    const userOrders = [];\r\n    const {readyBuy, readySold} = useSelector(({user}) => user.user);\r\n\r\n    readySold.concat(readyBuy).forEach(userOrder => {\r\n        const temp = userOrders.find(item => item.price === userOrder.price);\r\n        if (temp) {\r\n            temp.amount+= userOrder.amount;\r\n        }\r\n        else {\r\n            userOrders.push({price: userOrder.price, amount: userOrder.amount});\r\n        }\r\n    });\r\n    return (\r\n        <OrderBookContainer>\r\n            <OrderBookHeader>\r\n                <span className='buy'>Покупка</span>\r\n                <span className='price'>Цена, $</span>\r\n                <span className='sold'>Продажа</span>\r\n            </OrderBookHeader>\r\n            {orderBook.sold.sort((a, b) => b.price - a.price).map(order => {\r\n                const showUserOrders = userOrders.find(userOrder => userOrder.price === order.price) || false;\r\n                return (\r\n                    <OrderBookItem onClick={() => changeChoosePrice(order.price)} className='sold' key={order.price}>\r\n                        {showUserOrders &&<span className='user-orders'>{showUserOrders.amount}</span>}\r\n                        <div className='progress' style={{width: `${order.totalAmount / orderBook.totalSold * 100}%`}}/>\r\n                        <span className='amount'>{order.totalAmount.toLocaleString('RU-ru')}</span>\r\n                        <span className='price'>{order.price.toLocaleString('RU-ru')}</span>\r\n                    </OrderBookItem>\r\n                )\r\n            })}\r\n            {orderBook.buy.sort((a, b) => b.price - a.price).map(order => {\r\n                const showUserOrders = userOrders.find(userOrder => userOrder.price === order.price) || false;\r\n                return (\r\n                    <OrderBookItem onClick={() => changeChoosePrice(order.price)} className='buy' key={order.price} >\r\n                        {showUserOrders &&<span className='user-orders'>{showUserOrders.amount}</span>}\r\n                        <div className='progress' style={{width: `${order.totalAmount / orderBook.totalBuy * 100}%`}}/>\r\n                        <span className='amount'>{order.totalAmount.toLocaleString('RU-ru')}</span>\r\n                        <span className='price'>{order.price.toLocaleString('RU-ru')}</span>\r\n                    </OrderBookItem>\r\n                )\r\n            })}\r\n        </OrderBookContainer>\r\n    );\r\n};\r\n\r\nexport default OrderBook;\r\n","import styled from \"styled-components\";\r\n\r\n\r\nexport const SoldContentContainer = styled.div`\r\n  flex: 5;\r\n  margin-right: 20px;\r\n`;\r\n\r\nexport const SoldContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-gap: 30px 60px;\r\n\r\n  button {\r\n    grid-column: 1/3;\r\n  }\r\n\r\n  input {\r\n    margin-bottom: 5px;\r\n    transition: .2s linear;\r\n  }\r\n`;\r\n","import { useState } from \"react\";\r\n\r\n\r\nconst useInput = (initialState, regex = '') => {\r\n    const [inputValue, setInputValue] = useState(initialState);\r\n    const changeState = (event, notInput= false) => {\r\n        if (notInput) {\r\n            setInputValue(event);\r\n            return;\r\n        }\r\n        if (!regex) {\r\n            setInputValue(event.target.value);\r\n        } else {\r\n            if (regex.test(event.target.value)) {\r\n                setInputValue(event.target.value);\r\n            }\r\n        }\r\n    }\r\n    return [\r\n        inputValue,\r\n        changeState\r\n    ]\r\n}\r\n\r\nexport default useInput;","import { useEffect, useState } from \"react\";\r\n\r\nconst useAnimation = (animateTimout) => {\r\n    const [animate, setAnimate] = useState(false);\r\n    useEffect(() => {\r\n        if (animate) {\r\n            setTimeout(() => setAnimate(false), animateTimout);\r\n        }\r\n    }, [animate]);\r\n\r\n    return [\r\n        animate,\r\n        () => setAnimate(true)\r\n    ]\r\n}\r\n\r\nexport default useAnimation;","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const SoldBuyInfo = styled(Link)`\r\n  display: flex;\r\n  height: 90px;\r\n  padding: 20px;\r\n  align-items: center;\r\n  border: 1px solid #eaecee;\r\n  border-radius: 10px;\r\n  margin-bottom: 40px;\r\n\r\n  img {\r\n    height: 100%;\r\n    margin-right: 10px;\r\n    border-radius: 50%;\r\n  }\r\n`;\r\n\r\nexport const StockName = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  .ticker {\r\n    font-size: 13px;\r\n    color: rgba(0, 0, 0, .54);\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  .name {\r\n    font-size: 15px;\r\n  }\r\n`;\r\n\r\nexport const LastOrder = styled.div`\r\n  margin-left: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  span:first-child {\r\n    font-size: 13px;\r\n    color: rgba(0, 0, 0, .54);\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  .last-order {\r\n    font-size: 20px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { LastOrder, SoldBuyInfo, StockName } from \"./SoldBuyStockInfo.styles\";\r\nconst SoldBuyStockInfo = ({id, img, ticker, name, lastOrder}) => {\r\n    return (\r\n        <SoldBuyInfo to={`/stocks/${id}`}>\r\n            <img src={img} alt={name}/>\r\n            <StockName>\r\n                <span className='ticker'>{ticker}</span>\r\n                <span className='name'>{name}</span>\r\n            </StockName>\r\n            <LastOrder>\r\n                <span>Последняя сделка</span>\r\n                <span className='last-order'>{lastOrder} $</span>\r\n            </LastOrder>\r\n        </SoldBuyInfo>\r\n    );\r\n};\r\n\r\nexport default SoldBuyStockInfo;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Hint = styled.span`\r\n  color: rgba(0, 0, 0, .54);\r\n  font-size: 11px;\r\n  letter-spacing: -.2px;\r\n  margin-left: 10px;\r\n  transition: .2s;\r\n\r\n  &.animate {\r\n    color: #c40b08;\r\n  }\r\n`;","import React from 'react';\r\nimport { Input } from \"../../Styled\";\r\nimport { Hint } from \"./SoldBuyInput.styles\";\r\n\r\nconst SoldBuyInput = ({value, onInput, isAnimate, inputHintText, hintText}) => {\r\n    return (\r\n        <Input hint={inputHintText}>\r\n            <input type=\"text\" value={value} onInput={onInput}/>\r\n            <Hint className={isAnimate && 'animate'}>{hintText}</Hint>\r\n        </Input>\r\n    );\r\n};\r\n\r\nexport default SoldBuyInput;\r\n","import React, { useEffect } from 'react';\r\nimport { SoldContainer, SoldContentContainer } from \"./SoldContent.styles\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Button } from \"../../Styled\";\r\nimport useInput from \"../../hooks/useInput\";\r\nimport useAnimation from \"../../hooks/useAnimation\";\r\nimport toLocale from \"../../toLocale\";\r\nimport useSocket from \"../../hooks/useSocket\";\r\nimport SoldBuyStockInfo from \"../SoldBuyStockInfo/SoldBuyStockInfo\";\r\nimport SoldBuyInput from \"../SoldBuyInput/SoldBuyInput\";\r\n\r\n\r\nconst SoldContent = ({id, name, img, ticker, lastOrder, minSoldPrice}) => {\r\n    const [amount, setAmount] = useInput(1, /^\\d{0,10}$/);\r\n    const [price, setPrice] = useInput(lastOrder, /^\\d{0,10}(\\.\\d{0,2})?$/);\r\n\r\n    const soldSocket = useSocket('sold');\r\n\r\n    const chooseSoldPrice = useSelector(({settings}) => settings.soldPrice);\r\n\r\n    const [isIncorrectPrice, setIncorrectPriceAnimation] = useAnimation(200);\r\n    const [isIncorrectAmount, setIncorrectAmountAnimation] = useAnimation(200);\r\n\r\n\r\n    const stockAmount = useSelector(({user}) => user.user.stocks.find(stock => stock.id === +id))?.amount || 0;\r\n    const frozenAmount = useSelector(({user}) => user.user.stocks.find(stock => stock.id === +id))?.frozenAmount || 0;\r\n    const userName = useSelector(({user}) => user.user.name);\r\n\r\n\r\n    const sold = () => {\r\n        if (+amount === 0 || stockAmount - frozenAmount < +amount) {\r\n            setIncorrectAmountAnimation();\r\n            return;\r\n        }\r\n        if (+price < minSoldPrice) {\r\n            setIncorrectPriceAnimation();\r\n            return;\r\n        }\r\n        soldSocket.emit({stockId: +id, soldByPrice: +price, amount: +amount, sellerName: userName});\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (chooseSoldPrice) {\r\n            setPrice(chooseSoldPrice, true);\r\n        }\r\n    }, [chooseSoldPrice]);\r\n\r\n\r\n    return (\r\n        <SoldContentContainer>\r\n            <SoldBuyStockInfo ticker={ticker} img={img} name={name} id={id} lastOrder={lastOrder}/>\r\n            <SoldContainer>\r\n                <SoldBuyInput onInput={setPrice}\r\n                              value={price}\r\n                              hintText={`Минимальная цена продажи: ${toLocale(minSoldPrice)}`}\r\n                              inputHintText='Цена продажи'\r\n                              isAnimate={isIncorrectPrice}/>\r\n                <SoldBuyInput onInput={setAmount}\r\n                              value={amount}\r\n                              hintText={`Количество лотов на продажу: ${stockAmount - frozenAmount}`}\r\n                              inputHintText='Количество лотов'\r\n                              isAnimate={isIncorrectAmount}/>\r\n                <Button onClick={sold}>Продать за: {toLocale(price * amount)}</Button>\r\n            </SoldContainer>\r\n        </SoldContentContainer>\r\n    );\r\n};\r\n\r\nexport default SoldContent;\r\n","import { BASE_URL } from \"../constants\";\r\n\r\nconst initialState = {\r\n    user: null,\r\n    loaded: false,\r\n    error: false\r\n}\r\n\r\nconst types = {\r\n    FETCH_USER: 'FETCH_USER',\r\n    SET_ERROR: 'SET_ERROR'\r\n}\r\n\r\nconst userReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case types.FETCH_USER:\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                loaded: true,\r\n                error: false\r\n            }\r\n        case types.SET_ERROR:\r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n        default:\r\n            return {...state};\r\n    }\r\n}\r\n\r\nexport const fetchUserAC = (user) => ({\r\n    type: types.FETCH_USER,\r\n    payload: user\r\n})\r\n\r\nexport const setError = () => ({\r\n    type: types.SET_ERROR\r\n})\r\n\r\nexport const fetchUser = (userName) => dispatch => {\r\n    fetch(`${BASE_URL}/user/${userName}`)\r\n        .then((response) => {\r\n            if (response.status === 400) {\r\n                dispatch(setError());\r\n            }\r\n            return response.json()\r\n        })\r\n        .then(data => {\r\n            dispatch(fetchUserAC(data))\r\n        });\r\n}\r\n\r\nexport default userReducer;","import React, { useEffect, useState } from 'react';\r\nimport OrderBook from \"../components/OrderBook/OrderBook\";\r\nimport SoldContent from \"../components/SoldContent/SoldContent\";\r\nimport { useParams } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchUserAC } from \"../reducers/userReducer\";\r\nimport UserNavbar from \"../components/UserNavbar/UserNavbar\";\r\nimport useSocket from \"../hooks/useSocket\";\r\nimport { BASE_URL } from \"../constants\";\r\n\r\n\r\nconst SoldPage = () => {\r\n    const {id} = useParams();\r\n    const soldSocket = useSocket('change order book');\r\n    const [stock, setStock] = useState(null);\r\n    const dispatch = useDispatch();\r\n    const userId = useSelector(({user}) => user.user.id);\r\n\r\n    useEffect(() => {\r\n        soldSocket.on((data) => {\r\n            if (+data.changedStock.id === +id) {\r\n                setStock(data.changedStock);\r\n            }\r\n            if (data.user.id === userId) {\r\n                dispatch(fetchUserAC(data.user));\r\n            }\r\n        })\r\n        fetch(`${BASE_URL}/stock/${id}`)\r\n            .then(response => response.json())\r\n            .then(data => setStock(data));\r\n        return () => {\r\n            soldSocket.off();\r\n        }\r\n    }, []);\r\n    return (\r\n        stock &&\r\n        <>\r\n            <UserNavbar title={`Продажа ${stock.name}`}/>\r\n            <div style={{display: 'flex'}}>\r\n                <SoldContent minSoldPrice={stock.orderBook.buy[0]?.price || 0.01}\r\n                             id={id}\r\n                             lastOrder={stock.price}\r\n                             img={stock.image}\r\n                             name={stock.name}\r\n                             ticker={stock.ticker}/>\r\n                <OrderBook id={id} orderBook={stock.orderBook}/>\r\n            </div>\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default SoldPage;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n    SoldContainer,\r\n    SoldContentContainer,\r\n} from \"../SoldContent/SoldContent.styles\";\r\nimport { Button } from \"../../Styled\";\r\nimport SoldBuyStockInfo from \"../SoldBuyStockInfo/SoldBuyStockInfo\";\r\nimport toLocale from \"../../toLocale\";\r\nimport SoldBuyInput from \"../SoldBuyInput/SoldBuyInput\";\r\nimport useInput from \"../../hooks/useInput\";\r\nimport useSocket from \"../../hooks/useSocket\";\r\nimport useAnimation from \"../../hooks/useAnimation\";\r\n\r\nconst BuyContent = ({id, name, img, ticker, lastOrder, maxBuyPrice}) => {\r\n\r\n\r\n    const [amount, setAmount] = useInput(1, /^\\d{0,10}$/);\r\n    const [price, setPrice] = useInput(lastOrder, /^\\d{0,10}(\\.\\d{0,2})?$/);\r\n\r\n    const buySocket = useSocket('buy');\r\n\r\n    const chooseBuyPrice = useSelector(({settings}) => settings.buyPrice);\r\n\r\n    const [isIncorrectPrice, setIncorrectPriceAnimation] = useAnimation(200);\r\n    const [isIncorrectAmount, setIncorrectAmountAnimation] = useAnimation(200);\r\n\r\n    const {name: userName, frozenBalance, balance} = useSelector(({user}) => user.user);\r\n\r\n    const buy = () => {\r\n        if (+amount === 0 || (balance - frozenBalance) / price < amount) {\r\n            setIncorrectAmountAnimation();\r\n            return;\r\n        }\r\n        if (price > maxBuyPrice) {\r\n            setIncorrectPriceAnimation();\r\n            return;\r\n        }\r\n        buySocket.emit({stockId: +id, buyByPrice: +price, amount: +amount, buyerName: userName});\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (chooseBuyPrice)\r\n            setPrice(chooseBuyPrice, true);\r\n    }, [chooseBuyPrice]);\r\n\r\n    return (\r\n        <SoldContentContainer>\r\n            <SoldBuyStockInfo ticker={ticker} img={img} name={name} id={id} lastOrder={lastOrder}/>\r\n            <SoldContainer>\r\n                <SoldBuyInput onInput={setPrice}\r\n                              value={price}\r\n                              hintText={`Максимальная цена покупки: ${toLocale(maxBuyPrice)}`}\r\n                              inputHintText='Цена покупки'\r\n                              isAnimate={isIncorrectPrice}/>\r\n                <SoldBuyInput onInput={setAmount}\r\n                              value={amount}\r\n                              hintText={`Количество лотов на покупку: ${Math.floor((balance - frozenBalance) / price)}`}\r\n                              inputHintText='Количество лотов'\r\n                              isAnimate={isIncorrectAmount}/>\r\n                <Button onClick={buy}>Купить за: {toLocale(price * amount)}</Button>\r\n            </SoldContainer>\r\n\r\n        </SoldContentContainer>\r\n    );\r\n};\r\n\r\nexport default BuyContent;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport socket from \"../sockets\";\r\nimport { fetchUserAC } from \"../reducers/userReducer\";\r\nimport OrderBook from \"../components/OrderBook/OrderBook\";\r\nimport BuyContent from \"../components/BuyContent/BuyContent\";\r\nimport UserNavbar from \"../components/UserNavbar/UserNavbar\";\r\nimport { BASE_URL } from \"../constants\";\r\n\r\nconst BuyPage = () => {\r\n    const {id} = useParams();\r\n    const [stock, setStock] = useState(null);\r\n    const dispatch = useDispatch();\r\n    const userId = useSelector(({user}) => user.user.id);\r\n    useEffect(() => {\r\n        socket.on('change order book', (data) => {\r\n            if (+data.changedStock.id === +id) {\r\n                setStock(data.changedStock);\r\n            }\r\n            if (data.user.id === userId) {\r\n                dispatch(fetchUserAC(data.user));\r\n            }\r\n        })\r\n        fetch(`${BASE_URL}/stock/${id}`)\r\n            .then(response => response.json())\r\n            .then(data => setStock(data));\r\n        return () => {\r\n            socket.off('change order book');\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <UserNavbar title={`Покупка ${stock?.name || 'LOADING'}`}/>\r\n            {stock &&\r\n            <>\r\n                <div style={{display:'flex'}}>\r\n                    <BuyContent maxBuyPrice={stock.orderBook.sold[stock.orderBook.sold.length - 1]?.price || 999999}\r\n                                id={id}\r\n                                lastOrder={stock.price}\r\n                                img={stock.image}\r\n                                name={stock.name}\r\n                                ticker={stock.ticker}/>\r\n                    <OrderBook id={id} orderBook={stock.orderBook}/>\r\n                </div>\r\n            </>}\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default BuyPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport UserNavbar from \"../components/UserNavbar/UserNavbar\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BASE_URL } from \"../constants\";\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  padding: 16px;\r\n  border-bottom: 1px solid #eaecee;\r\n  color: #5485b8;\r\n  margin-top: 100px;\r\n  span:first-child {\r\n    flex: 1;\r\n  }\r\n`;\r\n\r\nconst StocksContainer = styled.div`\r\n    margin-top: -30px;\r\n`;\r\n\r\nconst StockItem = styled(Link)`\r\n  display: flex;\r\n  padding: 16px;\r\n  border-bottom: 1px solid #eaecee;\r\n  transition: .2s;\r\n  &:hover {\r\n    background-color: #e7e8ea;\r\n  }\r\n`;\r\n\r\nconst StockImage = styled.img`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst StockName = styled.div`\r\n  display: flex;\r\n  color: #333;\r\n  flex: 1;\r\n  div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    span:first-child {\r\n      margin-bottom: 5px;\r\n    }\r\n    span:last-child {\r\n      color: #666;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StockPrice = styled.span`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 17px;\r\n  color: #333;\r\n`;\r\n\r\nconst Catalog = () => {\r\n\r\n    const [stocks, setStocks] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetch(`${BASE_URL}/stock`)\r\n            .then(response => response.json())\r\n            .then(data => setStocks(data));\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <UserNavbar active='catalog' title='Каталог акций'/>\r\n            <StocksContainer>\r\n                <Header>\r\n                    <span>Название</span>\r\n                    <span>Цена</span>\r\n                </Header>\r\n                {stocks &&\r\n                stocks.map(stock => <StockItem to={`/stocks/${stock.id}`} key={stock.id}>\r\n                    <StockName>\r\n                        <StockImage src={stock.image}/>\r\n                        <div>\r\n                            <span>{stock.name}</span>\r\n                            <span>{stock.ticker}</span>\r\n                        </div>\r\n                    </StockName>\r\n                    <StockPrice>{stock.price} $</StockPrice>\r\n                </StockItem>)\r\n                }\r\n            </StocksContainer>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Catalog;\r\n","import styled from \"styled-components\";\r\n\r\nexport const OrderTop = styled.div`\r\n  color: rgba(0,0,0,.48);\r\n  background-color: #f5f5f6;\r\n  padding: 10px;\r\n  font-size: 13px;\r\n  border-radius: 10px 10px 0 0 ;\r\n  position: relative;\r\n`;\r\n\r\n\r\nexport const OrderRowContainer = styled.div`\r\n  display: flex;\r\n  padding: 20px 10px;\r\n`;\r\n\r\nexport const LeftSide = styled.div`\r\nflex: 1;\r\n  span {\r\n    font-size: 13px;\r\n    color: rgba(0,0,0,.54);\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\n\r\nexport const OrderInfo= styled.p`\r\n  font-size: 15px;\r\n  color: #333;\r\n`;\r\n\r\nexport const OrderTotalPrice= styled.span`\r\n  color: #333;\r\n  &.sold {\r\n    color: #36a761;\r\n  }\r\n`;","import React from 'react';\r\nimport { LeftSide, OrderInfo, OrderRowContainer, OrderTop, OrderTotalPrice } from \"./OrderRow.styles\";\r\nimport toLocale from \"../../toLocale\";\r\n\r\nconst OrderRow = ({price, stockName, amount, type, totalAmount}) => {\r\n    return (\r\n        <>\r\n            <OrderTop>{type === 'buy' ? 'Покупка(Ожидание)' : 'Продажа(Ожидание)'}</OrderTop>\r\n            <OrderRowContainer>\r\n                <LeftSide>\r\n                    <span>Брокерский счет, $</span>\r\n                    <OrderInfo>\r\n                        {type === 'buy' ? 'Покупка ' : 'Продажа '}\r\n                        {amount}{totalAmount !== amount && `/${totalAmount}`} акций {stockName}\r\n                    </OrderInfo>\r\n                </LeftSide>\r\n                <OrderTotalPrice className={type}>\r\n                    {type === 'buy' ? '-' : '+'}\r\n                    {toLocale(price * amount)}\r\n                </OrderTotalPrice>\r\n            </OrderRowContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderRow;\r\n","import React from 'react';\r\nimport UserNavbar from \"../components/UserNavbar/UserNavbar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport OrderRow from \"../components/OrderRow/OrderRow\";\r\n\r\nconst OrderPage = () => {\r\n    let {readyBuy, readySold} = useSelector(({user}) => user.user);\r\n    readyBuy = readyBuy.map(item => ({...item, type: 'buy'}));\r\n    readySold = readySold.map(item => ({...item, type: 'sold'}));\r\n    const orderList = readyBuy.concat(readySold).sort((a, b) => b.orderId - a.orderId);\r\n    return (\r\n        <div>\r\n            <UserNavbar title='Активные заявки' active='order'/>\r\n            {orderList.map(orderItem => <OrderRow key={orderItem.orderId} id={orderItem.orderId}\r\n                                                  totalAmount={orderItem.totalAmount}\r\n                                                  type={orderItem.type} price={orderItem.price}\r\n                                                  stockName={orderItem.stockName} amount={orderItem.amount}/>)}\r\n            {!orderList.length && <p style={{textAlign: 'center', fontWeight: 500, fontSize: 30, color: '#333'}}>Нет активных заявок</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrderPage;\r\n","import React, { useEffect } from 'react';\r\nimport { fetchUser } from \"../reducers/userReducer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button, Input } from \"../Styled\";\r\nimport styled from \"styled-components\";\r\nimport { useNavigate } from \"react-router\";\r\nimport useInput from \"../hooks/useInput\";\r\n\r\nconst LoginTitle = styled.h1`\r\n  font-size: 40px;\r\n  color: #333;\r\n  font-weight: 300;\r\n  margin-bottom: 40px;\r\n  text-align: center;\r\n`;\r\n\r\nconst LoginSubTitle = styled.h3`\r\n  font-size: 21px;\r\n  color: #9299a2;\r\n  font-weight: 400;\r\n  margin-bottom: 50px;\r\n  text-align: center;\r\n`;\r\n\r\nconst LoginContent = styled.div`\r\n  display: flex;\r\n  margin-bottom: 5px;\r\n\r\n  div {\r\n    flex: 8;\r\n\r\n    input {\r\n      border-radius: 5px 0 0 5px;\r\n      background-color: #e7e8ea;\r\n      height: 100%;\r\n    }\r\n  }\r\n\r\n  button {\r\n    flex: 2;\r\n    border-radius: 0 5px 5px 0;\r\n\r\n    &:disabled {\r\n      background-color: #ffdd2d;\r\n      opacity: .6;\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nconst LoginPage = () => {\r\n    const [name, setName] = useInput('');\r\n    const navigate = useNavigate();\r\n    const isIncorrectUserName = useSelector(({user}) => user.error);\r\n    const dispatch = useDispatch();\r\n\r\n    const sendRequest = () => {\r\n        dispatch(fetchUser(name));\r\n\r\n    }\r\n    useEffect(() => {\r\n        return () => {\r\n            navigate('/');\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div style={{width: '40%', margin: '50px auto'}}>\r\n            <div>Тестовые пользователи: admin, user</div>\r\n            <LoginTitle>Вход в приложение</LoginTitle>\r\n            <LoginSubTitle>Введите ваше имя</LoginSubTitle>\r\n            <LoginContent>\r\n                <Input hint='Имя'>\r\n                    <input type=\"text\" value={name} onInput={setName}/>\r\n                </Input>\r\n                <Button onClick={sendRequest} disabled={!name}>Войти</Button>\r\n            </LoginContent>\r\n            {isIncorrectUserName && <span style={{color: '#f79494', fontSize: 14}}>Нет такого пользователя</span>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginPage;\r\n","import './App.css';\nimport UserPage from \"./pages/UserPage\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BrowserRouter, Navigate, Route, Routes } from \"react-router-dom\";\nimport StockPage from \"./pages/StockPage\";\nimport SoldPage from \"./pages/SoldPage\";\nimport BuyPage from \"./pages/BuyPage\";\nimport Catalog from \"./pages/Catalog\";\nimport OrderPage from \"./pages/OrderPage\";\nimport LoginPage from \"./pages/LoginPage\";\nimport { fetchUserAC } from \"./reducers/userReducer\";\nimport { useEffect } from \"react\";\nimport useSocket from \"./hooks/useSocket\";\n\nconst Container = styled.div`\n  width: 70%;\n  margin: 100px auto 100px;\n\n`;\n\nfunction App() {\n    const userId = useSelector(({user}) => user.user?.id);\n    const dispatch = useDispatch();\n    const changeUserData = useSocket('newBalance');\n\n    changeUserData.on(user => {\n        if (user.id === userId)\n            dispatch(fetchUserAC(user));\n    })\n\n    useEffect(() => {\n        return () => {\n            changeUserData.off();\n        };\n    }, []);\n\n    return (\n        <BrowserRouter>\n            {userId ?\n                <>\n                    <Container>\n                        <Routes>\n                            <Route exact path='/' element={<UserPage/>}/>\n                            <Route path='/stocks/:id' element={<StockPage/>}/>\n                            <Route path='/sold/:id' element={<SoldPage/>}/>\n                            <Route path='/buy/:id' element={<BuyPage/>}/>\n                            <Route path='/catalog/' element={<Catalog/>}/>\n                            <Route path='/order/' element={<OrderPage/>}/>\n                        </Routes>\n                    </Container>\n                </>\n                :\n                <>\n                    <Routes>\n                        <Route path='/login' element={<LoginPage/>}/>\n                        <Route path='*' element={<Navigate to='/login'/>}/>\n                    </Routes>\n                </>\n            }\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport userReducer from \"./userReducer\";\r\nimport stockReducer from \"./stockReducer\";\r\nimport settingsReducer from \"./settingsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    user: userReducer,\r\n    stock: stockReducer,\r\n    settings: settingsReducer\r\n});\r\n\r\n\r\nexport default rootReducer;","import { applyMiddleware, createStore } from \"redux\";\r\nimport rootReducer from \"../reducers/rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from \"./store/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}